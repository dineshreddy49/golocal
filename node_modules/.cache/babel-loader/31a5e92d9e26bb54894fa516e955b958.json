{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sreel\\\\Desktop\\\\Final Frontend\\\\golocal\\\\src\\\\Components\\\\PlaceOrder\\\\Stepper\\\\MainStepper.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport LoginStepper from '../LoginStepper/LoginStepper';\nimport AddressStepper from '../Address/AddressStepper';\nimport { useDispatch, useSelector } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: 'inline-block'\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Login or Signup', 'Add or Choose Address', 'Payment'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(LoginStepper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(AddressStepper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function MainStepper() {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n  const steps = getSteps();\n  const auth = useSelector(state => state.auth);\n\n  const totalSteps = () => {\n    return steps.length;\n  };\n\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const handleNext = () => {\n    const newActiveStep = isLastStep() && !allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n    // find the first step that has been completed\n    steps.findIndex((step, i) => !(i in completed)) : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n\n  if (auth.authenticated && activeStep === 0) {\n    handleComplete();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepButton, {\n          onClick: handleStep(index),\n          completed: completed[index],\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allStepsCompleted() ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: getStepContent(activeStep)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: activeStep !== steps.length && completed[activeStep] && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            className: classes.completed,\n            children: [\"Step \", activeStep + 1, \" already completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainStepper, \"By0WJZ48u4PfxqugXvOq9lUqHGY=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = MainStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainStepper\");","map":{"version":3,"sources":["C:/Users/sreel/Desktop/Final Frontend/golocal/src/Components/PlaceOrder/Stepper/MainStepper.js"],"names":["React","makeStyles","Stepper","Step","StepButton","Button","Typography","LoginStepper","AddressStepper","useDispatch","useSelector","useStyles","theme","root","width","button","marginRight","spacing","completed","display","instructions","marginTop","marginBottom","getSteps","getStepContent","step","MainStepper","classes","activeStep","setActiveStep","useState","setCompleted","steps","auth","state","totalSteps","length","completedSteps","Object","keys","isLastStep","allStepsCompleted","handleNext","newActiveStep","findIndex","i","handleBack","prevActiveStep","handleStep","handleComplete","newCompleted","handleReset","authenticated","map","label","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LoginStepper from '../LoginStepper/LoginStepper';\r\nimport AddressStepper from '../Address/AddressStepper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Login or Signup', 'Add or Choose Address', 'Payment'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <LoginStepper/>;\r\n    case 1:\r\n      return <AddressStepper/>;\r\n    case 2:\r\n      return 'Step 3: This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function MainStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n  const steps = getSteps();\r\n  const auth = useSelector((state) => state.auth);\r\n  const totalSteps = () => {\r\n    return steps.length;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length;\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  };\r\n  if (auth.authenticated &&activeStep===0) {\r\n    handleComplete();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepButton onClick={handleStep(index)} completed={completed[index]}>\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              {activeStep !== steps.length &&\r\n                (completed[activeStep] && (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}