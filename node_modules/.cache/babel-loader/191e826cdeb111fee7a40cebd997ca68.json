{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sreel\\\\Desktop\\\\Final Frontend\\\\golocal\\\\src\\\\Components\\\\PlaceOrder\\\\Address\\\\AddressForm\\\\AddressForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAddress } from '../../../../Redux';\nimport { Container } from '@material-ui/core';\nimport './AddressForm.css';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  }\n}));\nexport default function AddressForm() {\n  _s();\n\n  const classes = useStyles();\n  const [fullName, setFname] = useState('');\n  const [mobileNumber, setPhoneNumber] = useState('');\n  const [pinCode, setZip] = useState('');\n  const [locality, setAddress2] = useState('');\n  const [address, setAddress1] = useState('');\n  const [cityDistrictTown, setCity] = useState('');\n  const [state, setState] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmitAddress = e => {\n    e.preventDefault();\n    const details = {\n      payload: {\n        address: {\n          fullName,\n          mobileNumber,\n          pinCode,\n          locality,\n          address,\n          cityDistrictTown,\n          state\n        }\n      }\n    };\n    dispatch(addAddress(details));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"addressForm-container\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"Name\",\n            name: \"Name\",\n            label: \"name\",\n            fullWidth: true,\n            autoComplete: \"given-name\",\n            onInput: e => setFname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"Phone Number\",\n            name: \"Phone Number\",\n            label: \"Phone Number\",\n            fullWidth: true,\n            autoComplete: \"Phone Number\",\n            onInput: e => setPhoneNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"address1\",\n            name: \"address1\",\n            label: \"Address line 1\",\n            fullWidth: true,\n            autoComplete: \"shipping address-line1\",\n            onInput: e => setAddress1(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"address2\",\n            name: \"address2\",\n            label: \"Address line 2\",\n            fullWidth: true,\n            autoComplete: \"shipping address-line2\",\n            onInput: e => setAddress2(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"city\",\n            name: \"city\",\n            label: \"City\",\n            fullWidth: true,\n            autoComplete: \"shipping address-level2\",\n            onInput: e => setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"state\",\n            name: \"state\",\n            label: \"State/Province/Region\",\n            fullWidth: true,\n            onInput: e => setState(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"zip\",\n            name: \"zip\",\n            label: \"Zip / Postal code\",\n            fullWidth: true,\n            autoComplete: \"shipping postal-code\",\n            onInput: e => setZip(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: classes.button,\n        onClick: handleSubmitAddress,\n        children: \"Save Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddressForm, \"mFH3FhbXaQic0jQeywpU+XnBW30=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["C:/Users/sreel/Desktop/Final Frontend/golocal/src/Components/PlaceOrder/Address/AddressForm/AddressForm.js"],"names":["React","useState","Grid","makeStyles","TextField","Button","useDispatch","useSelector","addAddress","Container","useStyles","theme","button","marginTop","spacing","marginRight","AddressForm","classes","fullName","setFname","mobileNumber","setPhoneNumber","pinCode","setZip","locality","setAddress2","address","setAddress1","cityDistrictTown","setCity","state","setState","dispatch","handleSubmitAddress","e","preventDefault","details","payload","target","value"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {addAddress} from '../../../../Redux'\r\nimport { Container } from '@material-ui/core';\r\nimport './AddressForm.css';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\nexport default function AddressForm() {\r\n    const classes = useStyles();\r\n    const [fullName, setFname] = useState('');\r\n    const [mobileNumber, setPhoneNumber] = useState('');\r\n    const [pinCode, setZip] = useState('');\r\n    const [locality, setAddress2] = useState('');\r\n    const [address, setAddress1] = useState('');\r\n    const [cityDistrictTown, setCity] = useState('');\r\n    const [state, setState] = useState('');\r\n    const dispatch = useDispatch();\r\n    const handleSubmitAddress=(e)=>{\r\n        e.preventDefault();\r\n        const details = {\r\n                payload:{\r\n                address:{\r\n                    fullName,mobileNumber,pinCode,locality,address,cityDistrictTown,state\r\n                }\r\n        }\r\n        }\r\n        dispatch(addAddress(details));\r\n        }\r\n    return (\r\n    <React.Fragment>\r\n    <Container className=\"addressForm-container\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"Name\"\r\n            name=\"Name\"\r\n            label=\"name\"\r\n            fullWidth\r\n            autoComplete=\"given-name\"\r\n            onInput={ e=>setFname(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} >\r\n        <TextField\r\n        required\r\n        id=\"Phone Number\"\r\n        name=\"Phone Number\"\r\n        label=\"Phone Number\"\r\n        fullWidth\r\n        autoComplete=\"Phone Number\"\r\n        onInput={ e=>setPhoneNumber(e.target.value)}\r\n      />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Address line 1\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n            onInput={ e=>setAddress1(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line2\"\r\n            onInput={ e=>setAddress2(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n            onInput={ e=>setCity(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth onInput={ e=>setState(e.target.value)}/>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Zip / Postal code\"\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\"\r\n            onInput={ e=>setZip(e.target.value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      className={classes.button}\r\n      onClick={handleSubmitAddress}\r\n    >Save Address</Button>\r\n    </Container>\r\n    </React.Fragment>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}