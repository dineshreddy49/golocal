{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\NASIREDDYPAVAN\\\\Desktop\\\\Project\\\\golocal\\\\src\\\\Components\\\\PlaceOrder\\\\Address\\\\AddressForm\\\\AddressForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAddress } from '../../../../Redux';\nimport { Container } from '@material-ui/core';\nimport './AddressForm.css';\nimport { useForm } from \"react-hook-form\";\nimport _ from \"lodash/fp\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  }\n}));\nexport default function AddressForm() {\n  _s();\n\n  var _errors$firstName, _errors$firstName$typ;\n\n  const classes = useStyles();\n  const [fullName, setFname] = useState('');\n  const [mobileNumber, setPhoneNumber] = useState('');\n  const [pinCode, setZip] = useState('');\n  const [locality, setAddress2] = useState('');\n  const [address, setAddress1] = useState('');\n  const [cityDistrictTown, setCity] = useState('');\n  const [state, setState] = useState('');\n  const dispatch = useDispatch();\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm({\n    criteriaMode: \"all\",\n    mode: \"onChange\"\n  });\n\n  const handleSubmitAddress = e => {\n    e.preventDefault();\n    const details = {\n      payload: {\n        address: {\n          fullName,\n          mobileNumber,\n          pinCode,\n          locality,\n          address,\n          cityDistrictTown,\n          state\n        }\n      }\n    };\n    dispatch(addAddress(details));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"addressForm-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        handleSubmitAddress: handleSubmit(handleSubmitAddress),\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"Name\",\n              placeholder: \"Enter Your Name\",\n              onChange: e => setFname(e.target.value),\n              ref: register({\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : (_errors$firstName$typ = _errors$firstName.types) === null || _errors$firstName$typ === void 0 ? void 0 : _errors$firstName$typ.required) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"warning\",\n              children: \"firstName required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"Phone Number\",\n              name: \"Phone Number\",\n              label: \"Phone Number\",\n              fullWidth: true,\n              autoComplete: \"Phone Number\",\n              onInput: e => setPhoneNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"address1\",\n              name: \"address1\",\n              label: \"Address line 1\",\n              fullWidth: true,\n              autoComplete: \"shipping address-line1\",\n              onInput: e => setAddress1(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"address2\",\n              name: \"address2\",\n              label: \"Address line 2\",\n              fullWidth: true,\n              autoComplete: \"shipping address-line2\",\n              onInput: e => setAddress2(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"city\",\n              name: \"city\",\n              label: \"City\",\n              fullWidth: true,\n              autoComplete: \"shipping address-level2\",\n              onInput: e => setCity(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"state\",\n              name: \"state\",\n              label: \"State/Province/Region\",\n              fullWidth: true,\n              onInput: e => setState(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"zip\",\n              name: \"zip\",\n              label: \"Zip / Postal code\",\n              fullWidth: true,\n              autoComplete: \"shipping postal-code\",\n              onInput: e => setZip(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          className: classes.button,\n          onClick: handleSubmitAddress,\n          children: \"Save Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddressForm, \"Ns3s9mJF+n25Ku00dbm4resEwTI=\", false, function () {\n  return [useStyles, useDispatch, useForm];\n});\n\n_c = AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["C:/Users/NASIREDDYPAVAN/Desktop/Project/golocal/src/Components/PlaceOrder/Address/AddressForm/AddressForm.js"],"names":["React","useState","Grid","makeStyles","TextField","Button","useDispatch","useSelector","addAddress","Container","useForm","_","useStyles","theme","button","marginTop","spacing","marginRight","form","width","AddressForm","classes","fullName","setFname","mobileNumber","setPhoneNumber","pinCode","setZip","locality","setAddress2","address","setAddress1","cityDistrictTown","setCity","state","setState","dispatch","register","errors","handleSubmit","criteriaMode","mode","handleSubmitAddress","e","preventDefault","details","payload","target","value","required","firstName","types"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {addAddress} from '../../../../Redux'\r\nimport { Container } from '@material-ui/core';\r\nimport './AddressForm.css';\r\nimport { useForm } from \"react-hook-form\";\r\nimport _ from \"lodash/fp\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  }));\r\nexport default function AddressForm() {\r\n    const classes = useStyles();\r\n    const [fullName, setFname] = useState('');\r\n    const [mobileNumber, setPhoneNumber] = useState('');\r\n    const [pinCode, setZip] = useState('');\r\n    const [locality, setAddress2] = useState('');\r\n    const [address, setAddress1] = useState('');\r\n    const [cityDistrictTown, setCity] = useState('');\r\n    const [state, setState] = useState('');\r\n    const dispatch = useDispatch();\r\n    const { register, errors, handleSubmit } = useForm({\r\n      criteriaMode: \"all\",\r\n      mode: \"onChange\"\r\n    });\r\n    const handleSubmitAddress=(e)=>{\r\n        e.preventDefault();\r\n        const details = {\r\n                payload:{\r\n                address:{\r\n                    fullName,mobileNumber,pinCode,locality,address,cityDistrictTown,state\r\n                }\r\n        }\r\n        }\r\n        dispatch(addAddress(details));\r\n        }\r\n    return (\r\n    <React.Fragment>\r\n    <Container className=\"addressForm-container\">\r\n    <form className={classes.form} handleSubmitAddress={handleSubmit(handleSubmitAddress)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"Name\"\r\n                placeholder=\"Enter Your Name\"\r\n                onChange={(e) => setFname(e.target.value)}\r\n                ref={register({ required: true})}\r\n              />\r\n                {/* without enter data for the password input will result both messages to appear */}\r\n                {errors?.firstName?.types?.required && <p className = \"warning\">firstName required</p>}\r\n        </Grid>\r\n        <Grid item xs={12} >\r\n        <TextField\r\n        required\r\n        id=\"Phone Number\"\r\n        name=\"Phone Number\"\r\n        label=\"Phone Number\"\r\n        fullWidth\r\n        autoComplete=\"Phone Number\"\r\n        onInput={ e=>setPhoneNumber(e.target.value)}\r\n      />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Address line 1\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n            onInput={ e=>setAddress1(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line2\"\r\n            onInput={ e=>setAddress2(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n            onInput={ e=>setCity(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth onInput={ e=>setState(e.target.value)}/>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Zip / Postal code\"\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\"\r\n            onInput={ e=>setZip(e.target.value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      className={classes.button}\r\n      onClick={handleSubmitAddress}\r\n    >Save Address</Button></form>\r\n    </Container>\r\n    </React.Fragment>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}