{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sreel\\\\Desktop\\\\DINESH GOLOCAL\\\\golocal\\\\src\\\\Components\\\\PlaceOrder\\\\Address\\\\Address\\\\Address.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { getAddress, selectedAddress } from '../../../../Redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport AddressCard from '../AddressCard/AddressCard';\nimport Radio from '@material-ui/core/Radio';\n\nfunction Address(props) {\n  _s();\n\n  const [value, setValue] = React.useState('');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const UserAddress = useSelector(state => state.addAddress);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAddress());\n  }, []);\n  console.log(UserAddress);\n  let content = null;\n  const n = 10;\n\n  const handleAddress = e => {\n    e.preventDefault();\n    UserAddress.address.map((eachAddress, key) => {\n      if (eachAddress._id == value) {\n        const details = {\n          UserAddress,\n          eachAddress\n        };\n        dispatch(selectedAddress(details));\n      }\n    });\n  };\n\n  if (UserAddress.error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error fetching the data please check your internet connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (UserAddress.loading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading the data please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (UserAddress.address.length === 0) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please add a new address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (UserAddress.address.length > 0) {\n    content = UserAddress.address.map((eachAddress, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: eachAddress._id,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 62\n          }, this),\n          label: /*#__PURE__*/_jsxDEV(AddressCard, {\n            eachAddress: eachAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this));\n  }\n\n  console.log(value._id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"products-container\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              \"aria-label\": \"gender\",\n              name: \"gender1\",\n              value: value,\n              onChange: handleChange,\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), value !== \"\" && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"Login-Stepper-Button\",\n          onClick: handleAddress,\n          children: \"DELIVER HERE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Address, \"fBQojwGlXdVHib++E2hkJ8r5ZNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Address;\nexport default Address;\n\nvar _c;\n\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"sources":["C:/Users/sreel/Desktop/DINESH GOLOCAL/golocal/src/Components/PlaceOrder/Address/Address/Address.js"],"names":["React","useEffect","Container","Row","Col","getAddress","selectedAddress","useDispatch","useSelector","FormControlLabel","RadioGroup","FormControl","Button","AddressCard","Radio","Address","props","value","setValue","useState","handleChange","event","target","UserAddress","state","addAddress","dispatch","console","log","content","n","handleAddress","e","preventDefault","address","map","eachAddress","key","_id","details","error","loading","length"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react'\r\nimport {Container,Row,Col} from 'react-bootstrap'\r\nimport { getAddress, selectedAddress } from '../../../../Redux'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddressCard from '../AddressCard/AddressCard';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\nfunction Address(props) {\r\n    const [value, setValue] = React.useState('');\r\n\r\n    const handleChange = (event) => {\r\n      setValue(event.target.value);\r\n    };\r\n    const UserAddress= useSelector(state=>state.addAddress)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {dispatch(getAddress())}, [])\r\n    console.log(UserAddress)\r\n    let content =null\r\n    const n = 10;\r\n    const handleAddress=(e)=>{\r\n        e.preventDefault();\r\n        UserAddress.address.map((eachAddress,key)=>{\r\n          if(eachAddress._id==value){\r\n            const details = {\r\n              UserAddress, eachAddress\r\n          }\r\n            dispatch(selectedAddress(details));\r\n          }\r\n        })\r\n    }\r\n    if(UserAddress.error)\r\n    {\r\n        content=<p>Error fetching the data please check your internet connection</p>\r\n    }\r\n    if(UserAddress.loading)\r\n    {\r\n        content=<p>Loading the data please wait</p>\r\n    }\r\n    if(UserAddress.address.length === 0)\r\n    {\r\n\r\n        content=<div>Please add a new address</div>\r\n    }\r\n    if(UserAddress.address.length >0)\r\n    {\r\n        content=UserAddress.address.map((eachAddress,key)=>\r\n        <div key={key}>\r\n        <Col>\r\n          <FormControlLabel value={eachAddress._id} control={<Radio />} label={<AddressCard eachAddress={eachAddress}/>} />\r\n        </Col>\r\n        </div>\r\n        )\r\n    }\r\n  \r\n    console.log(value._id)\r\n    return (\r\n        <div>\r\n        <div>\r\n          <Container className=\"products-container\" >\r\n          <Row xs={1} md={2}>\r\n          <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n           {content}\r\n          </RadioGroup>\r\n        </FormControl>\r\n          </Row>\r\n          {value!==\"\"&& <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"Login-Stepper-Button\"\r\n          onClick={handleAddress}\r\n        >DELIVER HERE\r\n    </Button>}\r\n         \r\n        </Container>\r\n        </div>\r\n      </div>\r\n        \r\n )\r\n}\r\nexport default Address\r\n"]},"metadata":{},"sourceType":"module"}